(function() {var implementors = {};
implementors["chrono"] = [{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for NaiveDate","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for NaiveDateTime","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for NaiveTime","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for DateTime&lt;FixedOffset&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for DateTime&lt;Utc&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for DateTime&lt;Local&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Weekday","synthetic":false,"types":[]}];
implementors["jsonwebtoken"] = [{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Algorithm","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Header","synthetic":false,"types":[]}];
implementors["potatosync_notes"] = [{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Note","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Setting","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Tag","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for SavingNote","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for PatchingNote","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for NoteId","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for NoteLastUpdated","synthetic":false,"types":[]},{"text":"impl Deserialize&lt;'static&gt; for NoteResponse","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for DeletedResponse","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for SavingTag","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for PatchingTag","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Token","synthetic":false,"types":[]}];
implementors["rocket_contrib"] = [{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for JsonValue","synthetic":false,"types":[]}];
implementors["rocket_cors"] = [{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for HeaderFieldName","synthetic":false,"types":[]},{"text":"impl&lt;'de, T&gt; Deserialize&lt;'de&gt; for AllOrSome&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Deserialize&lt;'de&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Method","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Origins <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Origins: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for CorsOptions","synthetic":false,"types":[]}];
implementors["rocket_failure"] = [{"text":"impl&lt;'de, T&gt; Deserialize&lt;'de&gt; for StrictApiResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Deserialize&lt;'de&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["rocket_failure_errors"] = [{"text":"impl&lt;'de, T&gt; Deserialize&lt;'de&gt; for StrictApiResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Deserialize&lt;'de&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Value","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Number","synthetic":false,"types":[]}];
implementors["toml"] = [{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Value","synthetic":false,"types":[]},{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Datetime","synthetic":false,"types":[]}];
implementors["uuid"] = [{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for Uuid","synthetic":false,"types":[]}];
implementors["validator"] = [{"text":"impl&lt;'de&gt; Deserialize&lt;'de&gt; for ValidationError","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()