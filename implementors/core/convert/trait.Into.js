(function() {var implementors = {};
implementors["hyper"] = [{"text":"impl&lt;'a&gt; Into&lt;Body&lt;'a&gt;&gt; for &amp;'a [u8]","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Into&lt;Body&lt;'a&gt;&gt; for &amp;'a str","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Into&lt;Body&lt;'a&gt;&gt; for &amp;'a String","synthetic":false,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl&lt;'a&gt; Into&lt;&amp;'a [u32; 4]&gt; for &amp;'a vec128_storage","synthetic":false,"types":[]},{"text":"impl Into&lt;vec128_storage&gt; for [u32; 4]","synthetic":false,"types":[]},{"text":"impl Into&lt;vec256_storage&gt; for [u64; 4]","synthetic":false,"types":[]},{"text":"impl Into&lt;[u32; 4]&gt; for vec128_storage","synthetic":false,"types":[]},{"text":"impl Into&lt;[u64; 2]&gt; for vec128_storage","synthetic":false,"types":[]},{"text":"impl Into&lt;[u128; 1]&gt; for vec128_storage","synthetic":false,"types":[]},{"text":"impl Into&lt;[u32; 8]&gt; for vec256_storage","synthetic":false,"types":[]},{"text":"impl Into&lt;[u64; 4]&gt; for vec256_storage","synthetic":false,"types":[]},{"text":"impl Into&lt;[u128; 2]&gt; for vec256_storage","synthetic":false,"types":[]},{"text":"impl Into&lt;[u32; 16]&gt; for vec512_storage","synthetic":false,"types":[]},{"text":"impl Into&lt;[u64; 8]&gt; for vec512_storage","synthetic":false,"types":[]},{"text":"impl Into&lt;[u128; 4]&gt; for vec512_storage","synthetic":false,"types":[]}];
implementors["rocket_contrib"] = [{"text":"impl Into&lt;Value&gt; for JsonValue","synthetic":false,"types":[]}];
implementors["rocket_http"] = [{"text":"impl Into&lt;Header&lt;'static&gt;&gt; for ContentType","synthetic":false,"types":[]},{"text":"impl Into&lt;Header&lt;'static&gt;&gt; for Accept","synthetic":false,"types":[]}];
implementors["siphasher"] = [{"text":"impl Into&lt;u128&gt; for Hash128","synthetic":false,"types":[]}];
implementors["unicase"] = [{"text":"impl&lt;'a&gt; Into&lt;&amp;'a str&gt; for UniCase&lt;&amp;'a str&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Into&lt;String&gt; for UniCase&lt;String&gt;","synthetic":false,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Into&lt;u8&gt; for Level","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()