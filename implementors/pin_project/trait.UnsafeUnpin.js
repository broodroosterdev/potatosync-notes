(function() {var implementors = {};
implementors["actix_codec"] = [{"text":"impl&lt;T, U&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"actix_codec/struct.Framed.html\" title=\"struct actix_codec::Framed\">Framed</a>&lt;T, U&gt;","synthetic":false,"types":["actix_codec::framed::Framed"]}];
implementors["actix_utils"] = [{"text":"impl&lt;S, T, U, I&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"actix_utils/dispatcher/struct.Dispatcher.html\" title=\"struct actix_utils::dispatcher::Dispatcher\">Dispatcher</a>&lt;S, T, U, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"actix_service/trait.Service.html\" title=\"trait actix_service::Service\">Service</a>&lt;Request = &lt;U as <a class=\"trait\" href=\"tokio_util/codec/decoder/trait.Decoder.html\" title=\"trait tokio_util::codec::decoder::Decoder\">Decoder</a>&gt;::<a class=\"type\" href=\"tokio_util/codec/decoder/trait.Decoder.html#associatedtype.Item\" title=\"type tokio_util::codec::decoder::Decoder::Item\">Item</a>, Response = I&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"type\" href=\"actix_service/trait.Service.html#associatedtype.Error\" title=\"type actix_service::Service::Error\">Error</a>: 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"type\" href=\"actix_service/trait.Service.html#associatedtype.Future\" title=\"type actix_service::Service::Future\">Future</a>: 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: <a class=\"trait\" href=\"tokio_util/codec/encoder/trait.Encoder.html\" title=\"trait tokio_util::codec::encoder::Encoder\">Encoder</a>&lt;I&gt; + <a class=\"trait\" href=\"tokio_util/codec/decoder/trait.Decoder.html\" title=\"trait tokio_util::codec::decoder::Decoder\">Decoder</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"tokio_util/codec/encoder/trait.Encoder.html\" title=\"trait tokio_util::codec::encoder::Encoder\">Encoder</a>&lt;I&gt;&gt;::<a class=\"type\" href=\"tokio_util/codec/encoder/trait.Encoder.html#associatedtype.Error\" title=\"type tokio_util::codec::encoder::Encoder::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["actix_utils::dispatcher::Dispatcher"]},{"text":"impl&lt;S, T&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"actix_utils/stream/struct.Dispatcher.html\" title=\"struct actix_utils::stream::Dispatcher\">Dispatcher</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"actix_service/trait.Service.html\" title=\"trait actix_service::Service\">Service</a>&lt;Request = S::<a class=\"type\" href=\"futures_core/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_core::stream::Stream::Item\">Item</a>, Response = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; + 'static,&nbsp;</span>","synthetic":false,"types":["actix_utils::stream::Dispatcher"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"actix_service/trait.Service.html\" title=\"trait actix_service::Service\">Service</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"actix_utils/timeout/struct.TimeoutServiceResponse.html\" title=\"struct actix_utils::timeout::TimeoutServiceResponse\">TimeoutServiceResponse</a>&lt;T&gt;","synthetic":false,"types":["actix_utils::timeout::TimeoutServiceResponse"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()