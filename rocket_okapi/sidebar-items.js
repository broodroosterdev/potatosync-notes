initSidebarItems({"attr":[["openapi","A proc macro to be used in tandem with one of `Rocket`'s endpoint macros. It requires that all of the arguments of the route implement one of the traits in `rocket_okapi::request`, and that the return type implements `OpenApiResponder`. ### Example ```rust,ignore use rocket_okapi::openapi; use rocket::get;"]],"derive":[["JsonSchema",""]],"macro":[["routes_with_openapi","A replacement macro for `rocket::routes`. The key differences are that this macro will add an additional element to the resulting `Vec<rocket::Route>`, which serves a static file called `openapi.json`. This file can then be used to display the routes in the swagger ui."]],"mod":[["gen","Contains the `Generator` struct, which you can use to manually control the way a struct is  represented in the documentation."],["handlers","Contains several `Rocket` `Handler`s, which are used for serving the json files and the swagger interface."],["request","This module contains several traits that correspond to the `Rocket` traits pertaining to request guards and responses"],["response","Contains the trait `OpenApiResponder`, meaning that a response implementing this trait can be documented."],["settings","Contains then `OpenApiSettings` struct, which can be used to customise the behaviour of a `Generator`."],["swagger_ui","Contains the functions and structs required to display the swagger web ui."],["util","Assorted function that are used throughout the application."]],"struct":[["OpenApiError","The error type returned by `rocket_okapi` when something fails."],["OperationInfo","Contains information about an endpoint."]],"trait":[["JsonSchema","A type which can be described as a JSON Schema document."]],"type":[["Result","Type alias for `Result<T, OpenApiError>`."]]});